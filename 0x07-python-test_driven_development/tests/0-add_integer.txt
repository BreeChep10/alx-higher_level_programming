"""
The `add_integer` Function
==========================

Importing the `add_integer` function from the module:
>>> add_integer = __import__("0-add_integer").add_integer

Adding two integers: 3 and 5
>>> add_integer(3, 5)
8

Subtracting 2 from 10
>>> add_integer(10, -2)
8

Adding an integer (2) and a float (8.0)
>>> add_integer(2, 8.0)
10

Attempting to add an integer and a string:
>>> add_integer(2, "hello")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

Attempting to add an integer and None:
>>> add_integer(4, None)
Traceback (most recent call last):
    ...
TypeError: b must be an integer

Attempting to add a tuple and an integer:
>>> add_integer((2, 3), 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

Attempting to add an integer and an empty list:
>>> add_integer(2, [])
Traceback (most recent call last):
    ...
TypeError: b must be an integer

Attempting to add a string and an integer:
>>> add_integer("Hello", 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

Adding two floating-point numbers: 2.2 and 2.2
>>> add_integer(2.2, 2.2)
4

Subtracting 1 from 98
>>> add_integer(98, -1)
97

Overflow test: Adding float('inf') and 0
>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

Overflow test: Adding two float('inf') values
>>> add_integer(float('inf'), float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

Testing the data type Nan
>>> add_integer(0, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

"""
